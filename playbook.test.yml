- name: run in local
  hosts: localhost
  tasks:
      - name: remove existing app bundle
        command: rm -rf build.tgz
      - name: create application bundle
        command: tar --exclude-from='./.exclude' -zcvf build.tgz .
      

- name: run in remote server
  hosts: test_gigih
  tasks:
      - name: clear previous app directory
        ansible.builtin.file:
            path: "{{ ansible_facts['env']['HOME'] }}/app"
            state: absent
      - name: create new app directory
        ansible.builtin.file:
            path: "{{ ansible_facts['env']['HOME'] }}/app"
            state: directory
      - name: copy builded project to app directory server
        ansible.builtin.copy:
            src: ./build.tgz
            dest: "{{ ansible_facts['env']['HOME'] }}/app/build.tgz"
      - name: extract app bundle
        command: >
            tar -xvzf build.tgz
        args:
            chdir: app/
      - name: update and upgrade repository cache
        become: yes
        apt:
            update_cache: yes
            upgrade: yes
      - name: install rbenv
        become: yes
        apt: name=rbenv
      - name: make directory ruby-build plugins
        shell: mkdir -p "$(rbenv root)"/plugins
        args:
            creates: .rbenv
      - name: pull ruby-build plugins
        shell: git clone https://github.com/rbenv/ruby-build.git "$(rbenv root)"/plugins/ruby-build
        args:
            creates: .rbenv/plugins/ruby-build
      - name: install ruby
        command: rbenv install 2.7.0
        args:
            creates: .rbenv/versions/2.7.0
      - name: install bundler
        become: yes
        command: gem install bundler
        args:
            creates: /var/lib/gems/2.7.0/gems/bundler*
      - name: install mysql-server
        become: yes
        apt: name=mysql-server
      - name: install libmysqlclient-dev
        become: yes
        apt: name=libmysqlclient-dev